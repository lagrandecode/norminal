# Generated by Django 4.2.2 on 2023-08-20 22:40

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, '"HOD'), (2, 'Staff')], default=1, max_length=1)),
                ('email', models.EmailField(max_length=80, unique=True)),
                ('surname', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('other_name', models.CharField(max_length=200)),
                ('grade_level', models.CharField(choices=[('GL1', 'GL1'), ('GL2', 'GL2'), ('GL3', 'GL3'), ('GL4', 'GL4'), ('GL5', 'GL5'), ('GL6', 'GL6'), ('GL7', 'GL7'), ('GL8', 'GL8'), ('GL9', 'GL9'), ('GL10', 'GL10'), ('GL12', 'GL12'), ('GL13', 'GL13'), ('GL14', 'GL14'), ('GL15', 'GL15'), ('GL16', 'GL16'), ('GL17', 'GL17')], max_length=5)),
                ('gender', models.CharField(choices=[('MALE', 'M'), ('FEMALE', 'F')], default='MALE', max_length=6)),
                ('qualification', models.CharField(max_length=60)),
                ('date_birth', models.DateField(default=datetime.datetime.now)),
                ('state_origin', models.CharField(choices=[('Agege Local Government', 'Agege Local Government'), ('Ajeromi-Ifelodun Local Government', 'Ajeromi-Ifelodun Local Government'), ('Alimosho Local Government', 'Alimosho Local Government'), ('Amuwo-Odofin Local Government', 'Amuwo-Odofin Local Government'), ('Apapa Local Government', 'Apapa Local Government'), ('Badagry Local Government', 'Badagry Local Government'), ('Epe Local Government', 'Epe Local Government'), ('Eti-Osa Local Government', 'Eti-Osa Local Government'), ('Ibeju-Lekki Local Government', 'Ibeju-Lekki Local Government'), ('Ifako-Ijaiye Local Government', 'Ifako-Ijaiye Local Government'), ('Ikeja Local Government', 'Ikeja Local Government'), ('Ikorodu Local Government', 'Ikorodu Local Government'), ('Kosofe Local Government', 'Kosofe Local Government'), ('Lagos Island Local Government', 'Lagos Island Local Government'), ('Lagos Mainland Local Government', 'Lagos Mainland Local Government'), ('Mushin Local Government', 'Mushin Local Government'), ('Ojo Local Government', 'Ojo Local Government'), ('Oshodi-Isolo Local Government', 'Oshodi-Isolo Local Government'), ('Shomolu Local Government', 'Shomolu Local Government'), ('Surulere Local Government', 'Surulere Local Government'), ('other state in Nigeria', 'other state in Nigeria'), ('Outside Nigeria', 'Outside Nigeria')], max_length=50)),
                ('designation_appointement', models.CharField(max_length=150)),
                ('date_first_appointment', models.DateField(default=datetime.datetime.now)),
                ('date_present_appointment', models.DateField(default=datetime.datetime.now)),
                ('employee_number', models.CharField(max_length=20)),
                ('civil_service_number', models.CharField(max_length=20)),
                ('mepb_file_number', models.CharField(max_length=20)),
                ('present_post', models.CharField(max_length=500)),
                ('mdas_posted', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=20)),
                ('phone_num_nextofkin', models.CharField(max_length=20)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('biography', models.CharField(max_length=5000)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('RETIRED', 'RETIRED'), ('RESIGNED', 'RESIGNED'), ('OTHERS', 'OTHERS')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.DateField(default=datetime.datetime.now)),
                ('end_year', models.DateField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='StaffNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='information.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='information.designation'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
